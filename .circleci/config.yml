version: 2.1
orbs:
  eb: circleci/aws-elastic-beanstalk@1.0.1
  aws-s3: circleci/aws-s3@2.0.0
jobs:
  hello-world:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: We get a new workflow ID
          command: |
            PREVIOUS_WORKFLOW_ID=$(curl -H "token: bc99fda4-cac2-4d84-bb29-aae87cbbcbbf" --request GET https://api.memstash.io/values/fullstackjs-deployment)
            #current build
            # not needed  as workflow id is accessible. Left it for easy copy paste, TODO: Remove in the end
            # curl -H "Content-Type: text/plain" -H "token: 46625e97-d058-4336-8b58-1d18131d9bfe" --request PUT --data "${CIRCLE_WORKFLOW_ID}" https://api.memstash.io/values/fullstackjs-deployment
            echo "commit sha1 ${CIRCLE_SHA1}"
            echo "Candidate id: ${CIRCLE_WORKFLOW_ID}"
            echo "Production id: ${PREVIOUS_WORKFLOW_ID}"
  backend-build:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Backend Build
          command: |
            ls
            cd udagram-api
            npm ci
            npm run build
            cp -a .elasticbeanstalk /www/.elasticbeanstalk
            ls 
            ls /www
            ls /www/.elasticbeanstalk
      # - save_cache:
      #     key: backend-{{ checksum "package-lock.json" }}
      #     paths:
      #       - backend/node_modules
      - persist_to_workspace:
          root: .
          paths:
            - udagram-api/node_modules
            - udagram-api/www
  udagram-frontend-build:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: udagram-frontend Build
          command: |
            cd udagram-frontend
            npm ci
            npm run build
      # - save_cache:
      #     key: udagram-frontend-{{ checksum "./udagram-frontend/package-lock.json" }}
      #     paths:
      #       - udagram-frontend/node_modules
      - persist_to_workspace:
          root: .
          paths:
            - udagram-frontend/node_modules
            - udagram-frontend/www
  udagram-frontend-test:
    docker:
      - image: circleci/node:10-browsers
    steps:
      - checkout
      # - restore_cache:
      #     keys: udagram-frontend-{{ checksum "./udagram-frontend/package-lock.json" }}
      - attach_workspace:
          at: .
      - run:
          name: Run frontend lint
          command: |
            cd udagram-frontend
            npm run lint
      - run:
          name: Run frontend test
          command: |
            cd udagram-frontend
            npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI
      - run:
          name: frontend Tests failed
          command: |
            echo "frontend tests have failed, placeholder for later"
          when: on_fail
  deploy-frontend:
    docker:
      - image: 'cimg/python:3.6'
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: |
          ls
          cd udagram-frontend
          ls
          echo $AWS_REGION
          echo $AWS_DEFAULT_REGION
      - aws-s3/sync:
          arguments: |
            --delete
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-region: AWS_REGION
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          from: www
          to: 's3://fullstack-js-deployment'
      - persist_to_workspace:
          root: .
          paths:
            - udagram-frontend/www
  eb-deployment:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - checkout
      - eb/setup
      - run:
          command: |
            eb deploy
            eb status
          name: You may now use the EB CLI within this job
workflows:
  default:
    jobs:
      - backend-build
      - udagram-frontend-build
      # - udagram-frontend-test:
      #     requires:
      #       - udagram-frontend-build
      - deploy-frontend:
          # requires:
          #   - udagram-frontend-test
          filters:
            branches:
              only: master # Only deploy when the commit is on the Master branch
      - eb-deployment:
          requires:
            - backend-build
            - udagram-frontend-test